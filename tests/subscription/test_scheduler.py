#!/usr/bin/env python3

import requests
import json
import time
from datetime import datetime

def test_scheduler_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á"""
    base_url = "http://localhost:8000/api/subscription"
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á ===\n")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    print("1. –°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:")
    try:
        response = requests.get(f"{base_url}/scheduler/status")
        print(f"URL: {base_url}/scheduler/status")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['scheduler']['running']}")
            print(f"üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {data['scheduler']['total_jobs']}")
            
            for job in data['scheduler']['jobs']:
                next_run = job['next_run'][:19] if job['next_run'] else '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'
                print(f"  ‚Ä¢ {job['name']}: —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –≤ {next_run}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
    print("2. –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:")
    try:
        response = requests.get(f"{base_url}/scheduler/jobs")
        print(f"URL: {base_url}/scheduler/jobs")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {data['total_count']}")
            
            for job in data['jobs']:
                next_run = job['next_run'][:19] if job['next_run'] else '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'
                print(f"  ‚Ä¢ {job['name']} (ID: {job['id']})")
                print(f"    –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: {next_run}")
                print(f"    –¢—Ä–∏–≥–≥–µ—Ä: {job['trigger']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 3: –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    print("3. –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:")
    try:
        response = requests.post(f"{base_url}/scheduler/run-test")
        print(f"URL: {base_url}/scheduler/run-test")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ {data['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ):")
    try:
        response = requests.get(f"{base_url}/instances/to-pay")
        print(f"URL: {base_url}/instances/to-pay")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –í—Å–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ: {data['total_count']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
            recent_instances = data['instances'][-3:] if data['instances'] else []
            if recent_instances:
                print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã:")
                for instance in recent_instances:
                    amount = instance['amount'] / 100
                    created = instance['created_at'][:19]
                    print(f"  ‚Ä¢ {instance['subscription']['name']} - {amount}‚ÇΩ (—Å–æ–∑–¥–∞–Ω: {created})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 5: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞)
    print("5. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (—á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥):")
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    time.sleep(10)
    
    try:
        response = requests.get(f"{base_url}/scheduler/status")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['scheduler']['running']}")
            
            for job in data['scheduler']['jobs']:
                next_run = job['next_run'][:19] if job['next_run'] else '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'
                print(f"  ‚Ä¢ {job['name']}: —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –≤ {next_run}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_scheduler_api() 