#!/usr/bin/env python3

import requests
import json
from datetime import datetime, timedelta

def test_new_month_instances_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞"""
    base_url = "http://localhost:8000/api/subscription"
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞ ===\n")
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞:")
    try:
        response = requests.post(f"{base_url}/new-month")
        print(f"URL: {base_url}/new-month")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {data['message']}")
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤: {data['created_count']}")
            print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: {data['skipped_count']}")
            
            if data['created_instances']:
                print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã:")
                for instance in data['created_instances']:
                    amount = instance['amount'] / 100
                    print(f"  ‚Ä¢ {instance['subscription_name']} - {amount}‚ÇΩ ({instance['frequency']})")
            
            if data['skipped_subscriptions']:
                print("\n‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:")
                for sub in data['skipped_subscriptions']:
                    print(f"  ‚Ä¢ {sub['subscription_name']} - {sub['reason']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω—ã
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤:")
    try:
        response = requests.get(f"{base_url}/instances/to-pay")
        print(f"URL: {base_url}/instances/to-pay")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –í—Å–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ: {data['total_count']}")
            print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {data['message']}")
            
            if data['instances']:
                print("\nüìã –≠–∫–∑–µ–º–ø–ª—è—Ä—ã –∫ –æ–ø–ª–∞—Ç–µ:")
                for instance in data['instances']:
                    amount = instance['amount'] / 100
                    billing_date = instance['billing_time'][:10]
                    print(f"  ‚Ä¢ {instance['subscription']['name']} - {amount}‚ÇΩ ({billing_date})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "="*80 + "\n")
    
    # –¢–µ—Å—Ç 3: –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ (–¥–æ–ª–∂–µ–Ω –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ)
    print("3. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è):")
    try:
        response = requests.post(f"{base_url}/new-month")
        print(f"URL: {base_url}/new-month")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {data['message']}")
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤: {data['created_count']}")
            print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: {data['skipped_count']}")
            
            if data['created_count'] == 0:
                print("  ‚úì –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ: –Ω–æ–≤—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)")
            
            if data['skipped_subscriptions']:
                print("\n‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:")
                for sub in data['skipped_subscriptions']:
                    print(f"  ‚Ä¢ {sub['subscription_name']} - {sub['reason']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_new_month_instances_api() 